name: Jobs with Ruff, Pytest and Coverage

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      first_homework: ${{ steps.filter.outputs.first_homework }}
      main_homework: ${{ steps.filter.outputs.main_homework }}
      go_homework: ${{ steps.filter.outputs.go_homework }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          first_homework:
            - 'HW_01/**'
          main_homework:
            - 'main/**'
          go_homework:
            - 'additional/**'

    - name: first homework is changed
      if: ${{ steps.filter.outputs.first_homework == 'true' }}
      run: echo "HW_01 files changed"

    - name: first homework not changed
      if: ${{ steps.filter.outputs.first_homework != 'true' }}
      run: echo "HW_01 files not changed"

    - name: main homework is changed
      if: ${{ steps.filter.outputs.main_homework == 'true' }}
      run: echo "main files changed"

    - name: main homework not changed
      if: ${{ steps.filter.outputs.main_homework != 'true' }}
      run: echo "main files not changed"

    - name: additional homework is changed
      if: ${{ steps.filter.outputs.go_homework == 'true' }}
      run: echo "additional files changed"

    - name: additional homework not changed
      if: ${{ steps.filter.outputs.go_homework != 'true' }}
      run: echo "additional files not changed"

  first_homework:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.first_homework == 'true' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff pytest pytest-cov

    - name: Lint with Ruff for hw_01
      run: |
        cd HW_01
        ruff check .

    - name: Test with pytest for hw_01
      run: |
        cd HW_01
        coverage run -m pytest  -v -s

    - name: Generate Coverage Report
      run: |
        cd HW_01
        coverage report -m

  main_homework:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.main_homework == 'true' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Poetry
      run: |
        pip install poetry

    - name: Install dependencies
      run: |
        cd main
        poetry install --with dev --no-root

    - name: Lint with Ruff for main
      run: |
        cd main
        poetry run ruff check .

    - name: Test with pytest for main
      run: |
        cd main
        poetry run coverage run -m pytest  -v -s

    - name: Generate Coverage Report
      run: |
        cd main
        poetry run coverage report -m

  go_homework:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.go_homework == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'

      - name: Verify dependencies
        run: |
          cd additional
          go mod verify

      - name: Run go vet
        run: |
          cd additional
          go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: |
          cd additional
          staticcheck ./...

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60
          working-directory: additional

      - name: Run tests
        run:  |
          cd additional
          go test -vet=off ./...
